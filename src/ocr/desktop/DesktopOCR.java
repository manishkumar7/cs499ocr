/*
 * DesktopOCR.java
 *
 * Created on Sep 12, 2011, 5:45:32 PM
 */

package ocr.desktop;

import java.awt.Image;
import ocr.service.OpticalCharacterRecognizer;
import ocr.service.Trainer;
import ocr.system.ImageRetriever;

/**
 * Run the OCR program for the desktop user.
 *
 * @author Devin
 */
public class DesktopOCR extends javax.swing.JFrame
{

    /** Creates new form DesktopOCR */
    public DesktopOCR()
    {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      mOcrButton = new javax.swing.JButton();
      mTrainButton = new javax.swing.JButton();
      mImagePathTextField = new javax.swing.JTextField();
      jLabel1 = new javax.swing.JLabel();
      mResultLabel = new javax.swing.JLabel();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      mOcrButton.setText("OCR");
      mOcrButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            mOcrButtonActionPerformed(evt);
         }
      });

      mTrainButton.setText("Train");
      mTrainButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            mTrainButtonActionPerformed(evt);
         }
      });

      mImagePathTextField.setText("C:\\test.jpg");

      jLabel1.setText("Image location:");

      mResultLabel.setText("test");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGap(70, 70, 70)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(mImagePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                           .addComponent(mOcrButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                           .addComponent(mTrainButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
               .addGroup(layout.createSequentialGroup()
                  .addGap(78, 78, 78)
                  .addComponent(mResultLabel)))
            .addContainerGap(61, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(80, Short.MAX_VALUE)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(mImagePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(mOcrButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(mTrainButton)
            .addGap(46, 46, 46)
            .addComponent(mResultLabel)
            .addGap(88, 88, 88))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

    private void mOcrButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mOcrButtonActionPerformed
    {//GEN-HEADEREND:event_mOcrButtonActionPerformed
       mResultLabel.setText(OpticalCharacterRecognizer.extractString(
          retrieveImage()));
    }//GEN-LAST:event_mOcrButtonActionPerformed

    private void mTrainButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mTrainButtonActionPerformed
    {//GEN-HEADEREND:event_mTrainButtonActionPerformed
       mResultLabel.setText(new Trainer(new DesktopPrompter(), retrieveImage()).
          train());
    }//GEN-LAST:event_mTrainButtonActionPerformed

    /**
     * Retrieve the image at the file path entered by the user
     *
     * @return The image at the location given by the user
     */
    private Image retrieveImage()
    {
       return new ImageRetriever(mImagePathTextField.getText()).readImage();
    }

    /**
    * Run the OCR program for the desktop user.
    *
    * @param args the command line arguments
    */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run() {
                new DesktopOCR().setVisible(true);
            }
        });
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel jLabel1;
   private javax.swing.JTextField mImagePathTextField;
   private javax.swing.JButton mOcrButton;
   private javax.swing.JLabel mResultLabel;
   private javax.swing.JButton mTrainButton;
   // End of variables declaration//GEN-END:variables

}
